version "3.7"

class FancyObligeTree : BigTree replaces BigTree
{
	States
	{
		Spawn:
			TRE2 A 0 NoDelay
			{
				StateLabel fstate;

				bool onGrass = false;
				bool onRock = false;
				//snow and sand flats are only available
				//via Epic Textures module.
				bool onSnow = false;
				bool onSand = false;
				bool unknownFlat = false;

				Name onflat = TexMan.GetName(floorpic);
				switch(onflat)
				{
					case 'GRASS1':
					case 'GRASS2':
					case 'RROCK19':
					case 'RROCK20':
						onGrass = true;
						break;
					case 'SNOW1':
					case 'SNOW5':
					case 'SNOW6':
					case 'SNOW7':
					case 'SNOW8':
						onSnow = true;
						break;
					default:
						unknownFlat = true;
				}

				if(onGrass)
				{
					if(random(1,100) <= 75) //Trees
					{
						switch(random(1,3))
						{
							case 1:
								fstate = "OakTree";
								break;
							case 2:
								fstate = "RedwoodTree";
								break;
							case 3:
								fstate = "SomeThinTree";
								break;
						}
					}
					else //Bushes
					{
						switch(random(1,2))
						{
							case 1:
								fstate = "ShrubA";
								break;
							case 2:
								fstate = "ShrubB";
								break;
						}
					}
				}

				if(onSnow)
				{
					switch(random(1,9))
					{
						case 1:
							fstate = "SnowTreeDeadA";
							break;
						case 2:
							fstate = "SnowTreeKebab";
							break;
						case 3:
							fstate = "SnowTreePloughed";
							break;
						case 4:
							fstate = "SnowTreeDeadB";
							break;
						case 5:
							fstate = "SnowTreeDeadC";
							break;
						case 6:
							fstate = "SnowPineA";
							break;							
						case 7:
							fstate = "SnowPineB";
							break;							
						case 8:
							fstate = "SnowPineSmolA";
							break;							
						case 9:
							fstate = "SnowPineSmolB";
							break;							
					}
				}

				if(unknownFlat)
				{
					switch(random(1,2))
					{
						case 1:
							fstate = "VanillaA";
							break;
						case 2:
							fstate = "VanillaB";
							break;
					}
				}

				//add a bit of random scaling jazz
				double randomscale = frandom(0.8, 1.5);
				scale.x *= randomscale;
				scale.y *= randomscale;

				// 50% chance of flippin'
				scale.x *= randompick(-1,1);

				return ResolveState(fstate);
			}

		// temperate plants
		OakTree:
			OAK1 A 1;
			Loop;

		RedwoodTree:
			RED1 A 1;
			Loop;

		SomeThinTree:
			THN1 A 1;
			Loop;

		ShrubA:
			SHB1 A 1;
			Loop;

		ShrubB:
			SHB2 A 1;
			Loop;

		// snow world plants
		SnowTreeDeadA:
			XMAS A 1;
			Loop;

		SnowTreeKebab:
			XMAS B 1;
			Loop;

		SnowTreePloughed:
			XMAS C 1;
			Loop;

		SnowTreeDeadB:
			XMAS D 1;
			Loop;

		SnowTreeDeadC:
			XMAS E 1;
			Loop;

		SnowPineA:
			XMAS F 1;
			Loop;

		SnowPineB:
			XMAS G 1;
			Loop;

		SnowPineSmolA:
			XMAS H 1;
			Loop;

		SnowPineSmolB:
			XMAS I 1;
			Loop;

		// vanilla assets
		VanillaA:
			TRE2 A 1;
			Loop;

		VanillaB:
			TRE1 A 1;
			Loop;
	}
}

class FancyObligeTree2 : FancyObligeTree replaces TorchTree
{
}